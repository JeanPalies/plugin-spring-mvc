package @{mvcPackage};

import java.util.List;

import @{entity.getQualifiedName()};
import @{daoPackage}.@{entity.getName()}Dao;
@foreach{clazz : entityClasses}
import @{daoPackage}.@{clazz}Dao;
@end{}

import javax.servlet.http.HttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Controller
@RequestMapping("/@{entityPlural.toLowerCase()}")
public class @{entity.getName()}Controller
{

	// Inject the appropriate data-access object for the given entity.
	
    @Autowired
	private @{entity.getName()}Dao @{ccEntity}Dao;
	@if{!entityNames.isEmpty() && !entityClasses.isEmpty() && !ccEntityClasses.isEmpty()}
	// Inject data-access objects for any inter-entity relationships.
	@foreach{clazz : entityClasses, ccClazz : ccEntityClasses}
	@Autowired
	private @{clazz}Dao @{ccClazz}Dao;
	@end{}
	@else{}
	@end{}
	@RequestMapping(method=RequestMethod.GET)
	public @ModelAttribute("entities")
	List<@{entity.getName()}> view@{entityPlural}(@ModelAttribute("search") @{entity.getName()} search)
	{
		List<@{entity.getName()}> @{entityPlural.toLowerCase()} = @{ccEntity}Dao.search(search);
		return @{entityPlural.toLowerCase()};
	}

	@RequestMapping(value="/{id}", method=RequestMethod.GET)
	public String view@{entity.getName()}(@PathVariable("id") Long id, Model model, HttpServletRequest request)
	{
		String edit = request.getParameter("edit");

		@{entity.getName()} @{ccEntity} = @{ccEntity}Dao.getById(id);
		model.addAttribute("@{ccEntity}", @{ccEntity});

		if (edit == null || !edit.equals("true"))
		{
			return "view@{entity.getName()}";
		}

		else
		{
			return "update@{entity.getName()}";
		}
	}

	@RequestMapping(value="/{id}", method=RequestMethod.POST)
	public String updatePost(@PathVariable("id") Long id, @{entity.getName()} @{ccEntity})
	{
		@{ccEntity}Dao.update(@{ccEntity});
		return "view@{entity.getName()}";
	}

	@RequestMapping(value="/{id}/delete", method=RequestMethod.POST)
	public String update@{entity.getName()}(@PathVariable("id") Long id, @{entity.getName()} @{ccEntity})
	{
		@{ccEntity}Dao.delete(id);
		return "redirect:@{targetDir}@{entityPlural.toLowerCase()}";
	}

	@RequestMapping(value="/create", method=RequestMethod.GET)
	public String create@{entity.getName()}(Model model)
	{
		model.addAttribute("@{ccEntity}", new @{entity.getName()}());
		return "create@{entity.getName()}";
	}

	@RequestMapping(value="/create", method=RequestMethod.POST)
	public String create@{entity.getName()}(@{entity.getName()} @{ccEntity})
	{
		@{ccEntity}Dao.create(@{ccEntity});
		return "redirect:@{targetDir}@{entityPlural.toLowerCase()}";
	}
}
