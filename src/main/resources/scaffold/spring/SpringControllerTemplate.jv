package @{mvcPackage};

import java.util.List;

import @{entity.getQualifiedName()};
import @{daoPackage}.@{entity.getName()}Dao;

import javax.servlet.http.HttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Controller
@RequestMapping("/@{entityPlural}")
public class @{entity.getName()}Controller
{

	// Inject the appropriate data-a87ccess object for the given entity.
	
    @Autowired
	private @{entity.getName()}Dao @{ccEntity}Dao;

	/*
    * viewAllEntities() - returns a view with all entities currently in the database.
    * The list of entities is passed to the JSP template via a ModelAttribute,
    * which is returned by the function.
    */

	@RequestMapping(method=RequestMethod.GET)
	public @ModelAttribute("entities")
	List<@{entity.getName()}> view@{entityPluralCap}()
	{
		List<@{entity.getName()}> entities = @{ccEntity}Dao.getAllEntities();
		return entities;
	}

    /*
    * viewEntity(Long id) - returns the view of a single entity in the database,
    * specified by its id.  The entity is passed to a JSP template via a Model object,
    * and a String, representing the name of the JSP view, is returned.
    */

	@RequestMapping(value="/{id}", method=RequestMethod.GET)
	public String view@{entity.getName()}(@PathVariable("id") Long id, Model model)
	{
		@{entity.getName()} entity = @{ccEntity}Dao.getById(id);
		model.addAttribute("@{ccEntity}", entity);
		return "view@{entity.getName()}";
	}

	@RequestMapping(value="/{id}", method=RequestMethod.POST)
	public String update@{entity.getName()}(@PathVariable("id") Long id, @{entity.getName()} entity, HttpServletRequest request)
	{
		String method = request.getParameter("method");

		if (method.equals("_delete"))
		{
			@{ccEntity}Dao.delete(id);
			return "redirect:/@{entityPlural}";
		}

		return "view@{entity.getName()}";
	}

	@RequestMapping(value="/create", method=RequestMethod.GET)
	public String create@{entity.getName()}(Model model)
	{
		model.addAttribute("@{ccEntity}", new @{entity.getName()}());

		return "create@{entity.getName()}";
	}

	@RequestMapping(value="/create", method=RequestMethod.POST)
	public String create@{entity.getName()}(@{entity.getName()} @{ccEntity})
	{
		@{ccEntity}Dao.create(@{ccEntity});
		return "redirect:/@{entityPlural}";
	}
}
